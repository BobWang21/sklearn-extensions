{"name":"Sklearn-extensions","tagline":"A consolidated package of small extensions to scikit-learn","body":"Scikit-Learn Extensions\r\n=======================\r\n\r\nv0.0.1\r\n\r\nScikit-Learn Extensions (sklearn_extensions) is a single source repository for extensions to [scikit-learn](https://github.com/sklearn/sklearn). It is intended\r\nto compliment the slower more cautious approach of scikit-learn with regard to adding new predictors and modules, with a \r\nseparate pip-installable source for sklearn-compatible modules that may not meet those standards. \r\n\r\nIn particular, this project is interested in smaller one-off projects or even gists, rather than larger more established ones (such as pylearn2).\r\nOther than larger projects, we will shy away from projects with significant external dependencies (i.e. wrappers around \r\nvowpal wabbit or xgboost), and rather prefer more python/numpy/scipy based projects. \r\n\r\nDue to these guiding goals, the modules included here may not be as well tested, production ready, or stable as those included \r\ndirectly in sklearn.  This is pretty much the wild west, test anything that uses this package heavily.\r\n\r\nInstallation / Usage\r\n--------------------\r\n\r\nWe aim to first support python 3, and are hosted on pypi, so to install just:\r\n \r\n    pip install sklearn-extensions\r\n\r\nNote that the install here will install all underlying packages, and is therefore pretty big.  It is recommended that \r\nyou do this in a virtualenv.\r\n\r\nExtensions Included So Far\r\n--------------------------\r\n\r\n * [Kernel Regression](https://github.com/jmetzen/kernel_regression)\r\n * [Sparse Filtering](https://github.com/jmetzen/sparse-filtering)\r\n * [Compiled Trees](https://github.com/ajtulloch/sklearn-compiledtrees/)\r\n * [Metric Learning](https://github.com/all-umass/metric-learn.git)\r\n * [Latent Dirichlet Allocation](https://github.com/ariddell/lda)\r\n * [KModes](https://github.com/nicodv/kmodes)\r\n * [Patsy-Learn](https://github.com/amueller/patsylearn)\r\n * [Pyculearn](https://github.com/predikto/pyculearn)\r\n * [Fuzzy K-Means](https://gist.github.com/mblondel/1451300)\r\n \r\nTODO\r\n----\r\n\r\nA number of packages have been identified but not yet added due to python 3 incompatibility, not being\r\npip installable, or otherwise not trivial to add. If anyone would like to get involved with this project\r\na great way to start is to add one of these.\r\n\r\n * [Extreme Learning Machines](https://github.com/dclambert/Python-ELM)\r\n * [Optimal Path Forest Classifiers](https://github.com/LibOPF/LibOPF)\r\n * [Random Output Trees](https://github.com/arjoly/random-output-trees)\r\n * [Simple MLP](https://gist.github.com/amueller/2061456)\r\n * [Non-negative Garotte](https://gist.github.com/agramfort/2351057)\r\n * [Kernel SGD](https://gist.github.com/mblondel/2573392)\r\n * [Kernel K-Means](https://gist.github.com/mblondel/6230787)\r\n * [Non-Negative Least Squares](https://gist.github.com/mblondel/4421380)\r\n * [Non-Negative Matrix Factorization](https://gist.github.com/omangin/8801846)\r\n * [K-means Feature Mapper](https://gist.github.com/larsmans/5996074)\r\n * [NMF via Coordinate Descent](https://gist.github.com/mblondel/09648344984565f9477a)\r\n * [HDBSCAN](https://github.com/lmcinnes/hdbscan)\r\n * [Pegasos](https://github.com/ejlb/pegasos)\r\n * [Gaussian Processes](https://github.com/jmetzen/skgp)\r\n * [Pinch Ratio Clustering](https://github.com/rsbowman/sklearn-prc)\r\n \r\nIf you have any more suggestions, please feel free to add them, or let me know and I will try to. \r\n\r\nContributing\r\n------------\r\n\r\nIf you have an extension that you'd like to add, please submit a pull request and we can throw it in.  If modifications\r\nto a project are required, please continue development in the project's own repo rather than submit changes here. If a \r\nproject comes from a gist or some other snippet and therefore cannot be simply imported, then please create a new repo \r\nwhich can be simply imported here.\r\n\r\nThere are two methods for adding extensions into sklearn\\_extensions:\r\n\r\n * If the extension is pip-installable, just add it to the requirements.txt file here, add a subdirectory for the new project, and import the relevant classes/methods\r\n * If the extension is not-pip installable, either make it so, or add the source into the subdirectory here directly. \r\n \r\nIf there is a package that is useful but does not comply with the sklearn API, feel free to include a wrapped version of\r\nit here as well, but include some tests.\r\n\r\nWe intend to add a consolidated source of tests for the included packages here as well, but that has not been formalized \r\nyet.\r\n\r\n\r\nLicense\r\n-------\r\n\r\nIn most cases, all that sklearn\\_extensions does with external projects is import them. In those cases we add the license\r\nof the source project in its subdirectory just for safe-keeping. \r\n\r\nAll material specific to this project (specifically any docs, tests, examples or original code) is released under the \r\nBSD 3-clause license. Any packages included in the bundle retain their original licences (as included in their subdirectories)","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}